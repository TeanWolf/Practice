function moveRight () {
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED1, 0, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED2, 25, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED3, 0, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED4, 5, PCA96852)
}
function moveForward () {
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED1, 0, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED2, 15, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED3, 0, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED4, 15, PCA96852)
}
function turnLeft () {
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED1, 100, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED2, 50, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED3, 0, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED4, 50, PCA96852)
    basic.pause(250)
}
function moveBack () {
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED1, 100, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED2, 15, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED3, 100, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED4, 15, PCA96852)
}
function turnRight () {
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED1, 0, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED2, 50, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED3, 100, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED4, 50, PCA96852)
    basic.pause(250)
}
function moveStop () {
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED1, 0, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED2, 0, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED3, 0, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED4, 0, PCA96852)
}
function moveLeft () {
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED1, 0, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED2, 5, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED3, 0, PCA96852)
    PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED4, 25, PCA96852)
}
let prev_right_sen = 0
let prev_left_sen = 0
let right_sen = 0
let left_sen = 0
let PCA96852 = 0
basic.clearScreen()
music.setVolume(41)
music.playMelody("C5 D E A E A E C ", 200)
let k = 1
let strip = neopixel.create(DigitalPin.P0, 18, NeoPixelMode.RGB_RGB)
strip.setBrightness(255)
strip.clear()
PCA96852 = 67
PCA9685.init(PCA96852, 0)
PCA9685.reset(PCA96852)
PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED5, 100, PCA96852)
PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED6, 100, PCA96852)
PCA9685.setLedDutyCycle(PCA9685.LEDNum.LED7, 100, PCA96852)
let n = 1
basic.pause(1000)
basic.forever(function () {
    left_sen = pins.digitalReadPin(DigitalPin.P13)
    right_sen = pins.digitalReadPin(DigitalPin.P12)
    if (left_sen == 0 && right_sen == 0) {
        if (prev_left_sen == 1 && prev_right_sen == 1) {
            if (n) {
                turnLeft()
                basic.showLeds(`
                    . # # # .
                    . # . # .
                    # # # # .
                    . # . # .
                    . . . # .
                    `)
                n += 0
            } else if (!(n)) {
                turnRight()
                basic.showLeds(`
                    . # # # .
                    . # . # .
                    . # # # #
                    . # . # .
                    . # . . .
                    `)
                n += 1
            }
        } else {
            moveBack()
            basic.showLeds(`
                . . # . .
                . . # . .
                # . # . #
                . # # # .
                . . # . .
                `)
            strip.showColor(neopixel.colors(NeoPixelColors.Red))
            strip.show()
            music.playTone(392, music.beat(BeatFraction.Double))
            basic.pause(2000)
        }
        moveStop()
        basic.showLeds(`
            . # # # .
            # # . # #
            # . # . #
            # # . # #
            . # # # .
            `)
        basic.showLeds(`
            # . . . #
            . # . # .
            . . # . .
            . # . # .
            # . . . #
            `)
    }
    if (left_sen == 0 && right_sen == 1) {
        moveRight()
        basic.showLeds(`
            . . # . .
            . . . # .
            # # # # #
            . . . # .
            . . # . .
            `)
        strip.showColor(neopixel.colors(NeoPixelColors.Purple))
        strip.show()
        music.playTone(262, music.beat(BeatFraction.Double))
    }
    if (left_sen == 1 && right_sen == 0) {
        moveLeft()
        basic.showLeds(`
            . . # . .
            . # . . .
            # # # # #
            . # . . .
            . . # . .
            `)
        strip.showColor(neopixel.colors(NeoPixelColors.Indigo))
        strip.show()
        music.playTone(262, music.beat(BeatFraction.Double))
    }
    if (left_sen == 1 && right_sen == 1) {
        moveForward()
        basic.showLeds(`
            . . # . .
            . # # # .
            # . # . #
            . . # . .
            . . # . .
            `)
        strip.showColor(neopixel.colors(NeoPixelColors.Yellow))
        strip.show()
    }
    if (input.isGesture(Gesture.ThreeG)) {
        moveBack()
        basic.showLeds(`
            . . # . .
            . . # . .
            # . # . #
            . # # # .
            . . # . .
            `)
        strip.showColor(neopixel.colors(NeoPixelColors.Red))
        strip.show()
        music.playTone(392, music.beat(BeatFraction.Double))
        basic.pause(2000)
    }
    prev_left_sen = left_sen
    prev_right_sen = right_sen
})
basic.forever(function () {
    if (k) {
        strip.showRainbow(1, 360)
        strip.show()
        basic.pause(1000)
    }
})
basic.forever(function () {
    strip.rotate(1)
    strip.show()
    basic.pause(25)
})
